#include "tcpclient.h"
#include <QApplication>
#include"sharefile.h"

/*
TODO
    服务器那边和客户端通信的socket 可以使用智能指针
    关于客户端或者服务器断开连接的情况  信号 重连 清理
    文件加密上传   用户名 密码加密
    文件上传的时候 加一个传输页面  即;显示进度
    1 用户文件的位置重新改一下  设置成user目录下
    2 目前只支持上传单个文件   改一下 上传多个文件
    3 使用两个客户端  分别上传文件或许限制一下上传文件的速度   比如来个休眠（可以用多线程实现 异步）
    4 上传文件可以改为异步进行吗  因为上传比较大的文件的时候 客户端会卡在那里   异步的话 这里可以用多线程
    5 中文文件好像会报错
    6 处理客户端请求的socket 使用多线程
    7 xxx双击文件夹是进入目录  双击文件的话应该要提供下载的页面
    8 进入之后自动刷新文件目录
    9 服务器向客户端发送数据的同时  客户端向服务器发送数据 且需要及时处理  需要怎么做（多线程？） 
        换句话说 就是当下载文件时候  客户端打开文件失败的情况下  怎么让服务器停止发送数据
    10 返回上一级目录失败
    11 指定人群聊 实现逻辑
    12 分享文件 如果选择分享到多个好友  但有部分好友出现拒绝接受的情况  要怎么处理
other
    * 客户端发起连接请求到 服务器  服务器确认连接之后  就会生成一个自定义 继承QTcpSokcet的 socket对象
        然后 这个自定义的socket对象的构造函数 会有一些connect函数 来关联信号与槽函数  与客户端进行交互
    * 文件夹的创建主要与用户的登录名称有关  在登录的时候存储用户的名称  创建文件夹的时候
    把用户的名称发送给服务器  也就是说 用户名在交互的过程中还是比较重要的
    * 使用单例模式  这样在其他文件中获取另一个文件里的一个类里面的成员时候  可以通过这个单例来获取
    * lambda表达式   用于信号和槽机制 （10个客户端向服务器发送请求  connected之后打印每个客户端的ip和端口信息
    * 在使用多线程模拟多个客户端的时候  因为每一个客户端要模拟多个操作 当时是使用了QThread的sleep方法 导致线程阻塞
         阻塞期间 线程的事件循环停止工作   无法处理信号和槽  （使用wireshark抓包确实能看到服务器向客户端发送了数据）
    * 由于服务器和客户端之间规定了通信协议 所以不同担心粘包的问题  服务器能够根据头部字段正确接受每一次请求  但是上传文件的时候要用到计时器
    * wirteTask 设置一个回调函数 用来通知调用方向结果（注册成功之后  通知调用方创建用户文件夹）
    * 遇到了跨线程问题：背景：为每个socket连接创建一个单独的客户端线程  数据库请求放到一个任务队列中 在数据库操作线程读取队列内容
        操作完之后 会触发回调函数  告诉客户端处理结果 但是由于回调函数已经属于数据库操作线程了 而write操作本应该在客户端线程执行 但
        他此时在数据库操作线程执行了  最后采用了信号和槽机制（采用一个通用的  模板  就不用设置多个信号和槽）
    3 代码量   3800行
    4 caData存放的是文件名称 用户名 以及一些响应信息  比如登录成功之类   caMsg存放的是当前文件路径  群聊消息  好友消息等
    5 flush  是直接强制发送数据  而不是等缓冲区满或者流被关闭
    6 服务器返回的响应  只是告诉客户端 发送的请求处理是否成功 处理的过程还是在服务器
    7 
*/

int main(int argc, char *argv[])
{
    QApplication a(argc, argv);
    TcpClient &w = TcpClient::getInstance();
//    ShareFile w;
//    QListWidget l;
//    l.addItem("你哦好");
//    l.addItem("你哦好1");
//    l.addItem("你哦好2");
//    w.updateFriend(&l);
    w.setWindowTitle("客户端");
    //w.show();
    return a.exec();
}
